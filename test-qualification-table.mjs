import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  'https://egdelmcijszuapcpglsy.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVnZGVsbWNpanN6dWFwY3BnbHN5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQxNjIyMDAsImV4cCI6MjA2OTczODIwMH0.JYV-JxosrfE7kMtFw3XLs27PGf3Fn-rDyJLDWeYXF_U'
);

console.log('üîß Test de r√©paration de la table candidate_qualification_results...');

try {
  // Invoquer la fonction de r√©paration
  const { data, error } = await supabase.functions.invoke('fix-qualification-results-table', {
    method: 'POST'
  });

  if (error) {
    console.error('‚ùå Erreur lors de l\'appel √† la fonction:', error);
  } else {
    console.log('‚úÖ R√©ponse de la fonction:', data);
  }

  // Tester l'acc√®s √† la table
  console.log('\nüß™ Test d\'acc√®s √† la table...');
  const { data: tableData, error: tableError } = await supabase
    .from('candidate_qualification_results')
    .select('id')
    .limit(1);

  if (tableError) {
    console.error('‚ùå Erreur d\'acc√®s √† la table:', tableError);
  } else {
    console.log('‚úÖ Table accessible:', tableData);
  }

} catch (error) {
  console.error('‚ùå Erreur g√©n√©rale:', error);
}