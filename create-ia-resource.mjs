import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://egdelmcijszuapcpglsy.supabase.co';
const serviceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVnZGVsbWNpanN6dWFwY3BnbHN5Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NDE2MjIwMCwiZXhwIjoyMDY5NzM4MjAwfQ.K3m7mUvhUJcSmuMQs-yXnhXQRMBc_CJwmz-dIX6bU1Q';

const supabase = createClient(supabaseUrl, serviceKey, {
  auth: {
    persistSession: false,
    autoRefreshToken: false,
  }
});

async function createIAResource() {
  console.log('ü§ñ Cr√©ation d\'une ressource IA R√©dacteur...\n');

  try {
    // 1. Trouver la cat√©gorie Marketing/Communication
    let { data: category } = await supabase
      .from('hr_categories')
      .select('*')
      .ilike('name', '%marketing%')
      .single();

    if (!category) {
      // Cr√©er la cat√©gorie si elle n'existe pas
      const { data: newCategory, error } = await supabase
        .from('hr_categories')
        .insert({
          name: 'Marketing & Communication'
        })
        .select()
        .single();

      if (error) {
        console.error('‚ùå Erreur cr√©ation cat√©gorie:', error);
        return;
      }
      category = newCategory;
    }

    console.log('‚úÖ Cat√©gorie:', category.name);

    // 2. Cr√©er un prompt IA si n√©cessaire
    const { data: existingPrompt } = await supabase
      .from('prompts_ia')
      .select('*')
      .eq('id', 'redacteur_contenu')
      .single();

    if (!existingPrompt) {
      const { error: promptError } = await supabase
        .from('prompts_ia')
        .insert({
          id: 'redacteur_contenu',
          name: 'IA R√©dacteur de Contenu',
          context: 'content-creation',
          prompt: `Tu es un r√©dacteur professionnel sp√©cialis√© dans la cr√©ation de contenu marketing et √©ditorial.
Tu ma√Ætrises parfaitement le fran√ßais et tu adaptes ton style selon les besoins du projet.
Tes comp√©tences incluent :
- R√©daction d'articles de blog et de pages web
- Cr√©ation de contenus SEO optimis√©s
- R√©daction de newsletters et emails marketing
- Conception de supports de communication
- Storytelling et copywriting

Tu fournis toujours un contenu structur√©, engageant et adapt√© √† la cible vis√©e.`,
          active: true,
          priority: 1
        });

      if (promptError) {
        console.error('‚ùå Erreur cr√©ation prompt:', promptError);
        return;
      }
      console.log('‚úÖ Prompt IA cr√©√©');
    }

    // 3. Cr√©er le profil hr_profiles pour l'IA
    const iaProfileId = crypto.randomUUID();

    const { data: hrProfile, error: hrError } = await supabase
      .from('hr_profiles')
      .insert({
        id: iaProfileId,
        name: 'IA R√©dacteur',
        category_id: category.id,
        is_ai: true,
        prompt_id: 'redacteur_contenu',
        base_price: 350 // Prix journalier IA
      })
      .select()
      .single();

    if (hrError) {
      console.error('‚ùå Erreur cr√©ation hr_profile:', hrError);
      return;
    }

    console.log('‚úÖ Profil HR cr√©√©:', hrProfile.name, '(ID:', hrProfile.id, ')');

    // 4. Cr√©er le profil candidat associ√© (m√™me ID)
    const { error: candidateError } = await supabase
      .from('candidate_profiles')
      .insert({
        id: iaProfileId, // M√äME ID que hr_profiles
        first_name: 'IA',
        last_name: 'R√©dacteur',
        email: 'ia_redacteur@ia.team',
        phone: '+33000000000',
        status: 'disponible',
        qualification_status: 'qualified',
        daily_rate: 350,
        technical_skills: ['R√©daction', 'SEO', 'Marketing', 'Storytelling'],
        soft_skills: ['Cr√©ativit√©', 'Adaptation', 'Synth√®se'],
        languages: ['Fran√ßais', 'Anglais'],
        seniority: 'expert'
      });

    if (candidateError) {
      console.error('‚ùå Erreur cr√©ation candidate_profile:', candidateError);
      // Nettoyer hr_profile cr√©√©
      await supabase.from('hr_profiles').delete().eq('id', iaProfileId);
      return;
    }

    console.log('‚úÖ Profil candidat IA cr√©√©');

    // 5. Cr√©er aussi un profil utilisateur (profiles) pour la compatibilit√©
    const { error: profileError } = await supabase
      .from('profiles')
      .insert({
        id: iaProfileId, // M√äME ID
        email: 'ia_redacteur@ia.team',
        first_name: 'IA R√©dacteur',
        role: 'candidate'
      });

    if (profileError && !profileError.message.includes('duplicate')) {
      console.log('‚ö†Ô∏è Profil utilisateur non cr√©√© (peut d√©j√† exister):', profileError.message);
    } else {
      console.log('‚úÖ Profil utilisateur cr√©√©');
    }

    // 6. Trouver le projet "Projet New key"
    const { data: project } = await supabase
      .from('projects')
      .select('*')
      .ilike('title', '%new%key%')
      .single();

    if (!project) {
      console.log('‚ö†Ô∏è Projet "New key" non trouv√© - IA cr√©√©e mais non assign√©e');
      return;
    }

    console.log('üìÅ Projet trouv√©:', project.title);

    // 7. Assigner l'IA au projet
    const { data: assignment, error: assignError } = await supabase
      .from('hr_resource_assignments')
      .insert({
        project_id: project.id,
        profile_id: iaProfileId,
        candidate_id: iaProfileId, // Pour les IA, candidate_id = profile_id
        booking_status: 'accepted', // Auto-accept√© pour les IA
        seniority: 'expert',
        languages: ['Fran√ßais', 'Anglais'],
        expertises: ['R√©daction', 'Marketing']
      })
      .select()
      .single();

    if (assignError) {
      console.error('‚ùå Erreur assignation au projet:', assignError);
      return;
    }

    console.log('‚úÖ IA assign√©e au projet avec succ√®s!');
    console.log('\nüìä R√©sum√©:');
    console.log('  - Ressource IA:', hrProfile.name);
    console.log('  - ID:', iaProfileId);
    console.log('  - Email:', 'ia_redacteur@ia.team');
    console.log('  - Projet:', project.title);
    console.log('  - Statut:', assignment.booking_status);
    console.log('\n‚ú® L\'IA devrait maintenant appara√Ætre dans la messagerie du projet!');

  } catch (error) {
    console.error('‚ùå Erreur globale:', error);
  }
}

createIAResource();