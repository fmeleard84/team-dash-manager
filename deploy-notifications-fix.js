import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://egdelmcijszuapcpglsy.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVnZGVsbWNpanN6dWFwY3BnbHN5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQxNjIyMDAsImV4cCI6MjA2OTczODIwMH0.JYV-JxosrfE7kMtFw3XLs27PGf3Fn-rDyJLDWeYXF_U';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

console.log(`
üîß D√©ploiement du fix pour candidate_notifications
================================================

üìã Instructions:
--------------
1. Ouvrez Supabase Dashboard SQL Editor:
   https://supabase.com/dashboard/project/egdelmcijszuapcpglsy/sql/new

2. Ex√©cutez le SQL suivant √©tape par √©tape:

=== √âTAPE 1: V√©rifier et corriger la structure de candidate_notifications ===
`);

console.log(`
-- V√©rifier la structure actuelle
SELECT column_name, data_type 
FROM information_schema.columns 
WHERE table_name = 'candidate_notifications' 
AND table_schema = 'public'
ORDER BY ordinal_position;

-- Ajouter les colonnes manquantes
ALTER TABLE candidate_notifications 
ADD COLUMN IF NOT EXISTS type TEXT DEFAULT 'general',
ADD COLUMN IF NOT EXISTS title TEXT,
ADD COLUMN IF NOT EXISTS message TEXT,
ADD COLUMN IF NOT EXISTS priority TEXT DEFAULT 'medium',
ADD COLUMN IF NOT EXISTS data JSONB DEFAULT '{}',
ADD COLUMN IF NOT EXISTS status TEXT DEFAULT 'unread',
ADD COLUMN IF NOT EXISTS created_at TIMESTAMPTZ DEFAULT NOW();
`);

console.log(`
=== √âTAPE 2: Recr√©er la fonction archive_project avec gestion d'erreur ===

Copiez le contenu complet depuis fix-candidate-notifications.sql
(lignes 18 √† 148)
`);

console.log(`
=== √âTAPE 3: Recr√©er la fonction unarchive_project ===

Copiez le contenu complet depuis fix-candidate-notifications.sql
(lignes 151 √† 247)
`);

console.log(`
=== √âTAPE 4: Recr√©er la fonction soft_delete_project ===

Copiez le contenu complet depuis fix-candidate-notifications.sql
(lignes 251 √† 363)
`);

console.log(`
=== √âTAPE 5: V√©rifier le r√©sultat ===

-- V√©rifier que les colonnes sont bien ajout√©es
SELECT column_name, data_type 
FROM information_schema.columns 
WHERE table_name = 'candidate_notifications' 
AND table_schema = 'public'
ORDER BY ordinal_position;

-- Tester l'archivage d'un projet test
-- Remplacez les UUIDs par des valeurs r√©elles de votre base
-- SELECT archive_project('project-id-here', 'user-id-here', 'Test archivage');
`);

console.log(`
‚úÖ Une fois toutes les √©tapes ex√©cut√©es, l'archivage devrait fonctionner correctement !

üîç Pour v√©rifier:
1. Retournez dans /client-dashboard
2. Essayez d'archiver un projet
3. V√©rifiez que le projet appara√Æt dans l'onglet "Archiv√©s"
4. V√©rifiez que les candidats re√ßoivent bien les notifications
`);