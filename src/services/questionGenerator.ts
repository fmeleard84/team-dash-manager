import { CandidateProfile } from '@/hooks/useCandidateProfile';

export interface GeneratedQuestion {
  id: number;
  question: string;
  category: string;
  difficulty: string;
  context?: string;
}

// Questions par d√©faut par domaine
const DEFAULT_QUESTIONS: Record<string, GeneratedQuestion[]> = {
  marketing: [
    {
      id: 1,
      question: "Comment optimiseriez-vous une campagne Google Ads avec un budget limit√© tout en maximisant le ROI ?",
      category: "Google Ads",
      difficulty: "Interm√©diaire"
    },
    {
      id: 2,
      question: "Quelle est votre approche pour am√©liorer le r√©f√©rencement naturel (SEO) d'un site web ?",
      category: "SEO",
      difficulty: "Interm√©diaire"
    },
    {
      id: 3,
      question: "Comment mesurez-vous le succ√®s d'une strat√©gie de marketing digital ?",
      category: "Analytics",
      difficulty: "D√©butant"
    },
    {
      id: 4,
      question: "D√©crivez votre processus pour cr√©er une strat√©gie de contenu efficace.",
      category: "Content Marketing",
      difficulty: "Interm√©diaire"
    },
    {
      id: 5,
      question: "Comment g√©rez-vous l'attribution multi-canal dans vos campagnes marketing ?",
      category: "Analytics",
      difficulty: "Avanc√©"
    },
    {
      id: 6,
      question: "Quelle est votre exp√©rience avec le marketing automation et quels outils utilisez-vous ?",
      category: "Marketing Automation",
      difficulty: "Interm√©diaire"
    },
    {
      id: 7,
      question: "Comment adaptez-vous votre strat√©gie marketing aux diff√©rentes phases du parcours client ?",
      category: "Strategy",
      difficulty: "Avanc√©"
    },
    {
      id: 8,
      question: "Parlez-nous de votre approche pour optimiser le taux de conversion d'un site e-commerce.",
      category: "CRO",
      difficulty: "Interm√©diaire"
    },
    {
      id: 9,
      question: "Comment g√©rez-vous et optimisez-vous un budget marketing annuel ?",
      category: "Management",
      difficulty: "Senior"
    },
    {
      id: 10,
      question: "Quelle a √©t√© votre campagne marketing la plus r√©ussie et pourquoi ?",
      category: "Experience",
      difficulty: "Interm√©diaire"
    }
  ],
  development: [
    {
      id: 1,
      question: "Qu'est-ce que React et quels sont ses principaux avantages ?",
      category: "React",
      difficulty: "D√©butant"
    },
    {
      id: 2,
      question: "Comment g√©rez-vous l'√©tat dans une application React moderne ?",
      category: "React",
      difficulty: "Interm√©diaire"
    },
    {
      id: 3,
      question: "Expliquez le concept de hooks en React.",
      category: "React",
      difficulty: "Interm√©diaire"
    },
    {
      id: 4,
      question: "Qu'est-ce que TypeScript et pourquoi l'utiliser ?",
      category: "TypeScript",
      difficulty: "D√©butant"
    },
    {
      id: 5,
      question: "Comment optimisez-vous les performances d'une application web ?",
      category: "Performance",
      difficulty: "Avanc√©"
    },
    {
      id: 6,
      question: "D√©crivez votre approche pour tester une application.",
      category: "Testing",
      difficulty: "Interm√©diaire"
    },
    {
      id: 7,
      question: "Comment g√©rez-vous la s√©curit√© dans vos applications ?",
      category: "Security",
      difficulty: "Avanc√©"
    },
    {
      id: 8,
      question: "Expliquez les principes SOLID.",
      category: "Best Practices",
      difficulty: "Avanc√©"
    },
    {
      id: 9,
      question: "Comment travaillez-vous en √©quipe avec Git ?",
      category: "Collaboration",
      difficulty: "Interm√©diaire"
    },
    {
      id: 10,
      question: "Quel est votre processus de d√©bogage ?",
      category: "Problem Solving",
      difficulty: "Interm√©diaire"
    }
  ],
  design: [
    {
      id: 1,
      question: "Comment abordez-vous un nouveau projet de design ?",
      category: "Process",
      difficulty: "D√©butant"
    },
    {
      id: 2,
      question: "Quelle est votre approche pour cr√©er une identit√© visuelle de marque ?",
      category: "Branding",
      difficulty: "Interm√©diaire"
    },
    {
      id: 3,
      question: "Comment assurez-vous l'accessibilit√© dans vos designs ?",
      category: "Accessibility",
      difficulty: "Interm√©diaire"
    },
    {
      id: 4,
      question: "D√©crivez votre processus de recherche utilisateur.",
      category: "UX Research",
      difficulty: "Interm√©diaire"
    },
    {
      id: 5,
      question: "Comment cr√©ez-vous des design systems scalables ?",
      category: "Design Systems",
      difficulty: "Avanc√©"
    },
    {
      id: 6,
      question: "Quelle est votre approche pour le prototypage ?",
      category: "Prototyping",
      difficulty: "Interm√©diaire"
    },
    {
      id: 7,
      question: "Comment collaborez-vous avec les d√©veloppeurs ?",
      category: "Collaboration",
      difficulty: "Interm√©diaire"
    },
    {
      id: 8,
      question: "Comment mesurez-vous le succ√®s d'un design ?",
      category: "Analytics",
      difficulty: "Avanc√©"
    },
    {
      id: 9,
      question: "Parlez-nous d'un projet o√π vous avez d√ª faire des compromis.",
      category: "Experience",
      difficulty: "Senior"
    },
    {
      id: 10,
      question: "Comment restez-vous √† jour avec les tendances du design ?",
      category: "Learning",
      difficulty: "D√©butant"
    }
  ]
};

// Fonction pour d√©terminer le domaine bas√© sur le profil
function getDomainFromProfile(profile: CandidateProfile): string {
  const jobTitle = profile.job_title?.toLowerCase() || '';
  const skills = profile.technical_skills || [];
  
  // Marketing
  if (jobTitle.includes('marketing') || 
      jobTitle.includes('growth') || 
      jobTitle.includes('seo') ||
      jobTitle.includes('ads') ||
      skills.some(s => s.toLowerCase().includes('marketing')) ||
      skills.some(s => s.toLowerCase().includes('seo')) ||
      skills.some(s => s.toLowerCase().includes('google ads'))) {
    return 'marketing';
  }
  
  // Design
  if (jobTitle.includes('design') || 
      jobTitle.includes('ux') || 
      jobTitle.includes('ui') ||
      skills.some(s => s.toLowerCase().includes('design')) ||
      skills.some(s => s.toLowerCase().includes('figma'))) {
    return 'design';
  }
  
  // Development par d√©faut
  return 'development';
}

// Fonction pour adapter les questions au niveau de s√©niorit√©
function adaptQuestionsToSeniority(questions: GeneratedQuestion[], seniority?: string): GeneratedQuestion[] {
  if (!seniority) return questions;
  
  const seniorityLevel = seniority.toLowerCase();
  
  return questions.map(q => {
    // Adapter la formulation selon le niveau
    if (seniorityLevel.includes('junior') || seniorityLevel.includes('d√©butant')) {
      return {
        ...q,
        question: q.question.replace('optimiseriez', 'optimiseriez').replace('g√©rez', 'g√©reriez'),
        difficulty: 'D√©butant'
      };
    } else if (seniorityLevel.includes('senior') || seniorityLevel.includes('expert')) {
      return {
        ...q,
        question: q.question + ' Donnez des exemples concrets de votre exp√©rience.',
        difficulty: 'Senior'
      };
    }
    return q;
  });
}

// Fonction principale pour g√©n√©rer les questions
export async function generateQuestionsForProfile(profile: CandidateProfile): Promise<GeneratedQuestion[]> {
  try {
    // D√©terminer le domaine
    const domain = getDomainFromProfile(profile);
    console.log(`üìä Domaine d√©tect√©: ${domain} pour ${profile.job_title}`);
    
    // R√©cup√©rer les questions de base
    let questions = DEFAULT_QUESTIONS[domain] || DEFAULT_QUESTIONS.development;
    
    // Adapter au niveau de s√©niorit√©
    questions = adaptQuestionsToSeniority(questions, profile.seniority_level);
    
    // Personnaliser avec les comp√©tences sp√©cifiques
    if (profile.technical_skills && profile.technical_skills.length > 0) {
      // Adapter certaines questions pour mentionner les comp√©tences
      questions = questions.map((q, index) => {
        if (index < 3 && profile.technical_skills && profile.technical_skills[index]) {
          return {
            ...q,
            question: q.question + ` (En relation avec votre expertise en ${profile.technical_skills[index]})`
          };
        }
        return q;
      });
    }
    
    return questions;
  } catch (error) {
    console.error('Erreur g√©n√©ration questions:', error);
    // Retourner des questions par d√©faut en cas d'erreur
    return DEFAULT_QUESTIONS.development;
  }
}

// Fonction pour cr√©er le prompt pour l'agent ElevenLabs
export function createAgentPrompt(profile: CandidateProfile, questions: GeneratedQuestion[]): string {
  const jobTitle = profile.job_title || 'Candidat';
  const seniority = profile.seniority_level || '';
  const skills = profile.technical_skills?.join(', ') || '';
  
  return `Tu es un recruteur qui pose EXACTEMENT 10 questions pour le poste de ${jobTitle}.

INSTRUCTION PRINCIPALE : Apr√®s CHAQUE r√©ponse du candidat, tu dis "Merci" et tu poses la QUESTION SUIVANTE imm√©diatement. PAS de questions de suivi, PAS de demande de d√©tails.

Les 10 questions √† poser DANS L'ORDRE :
${questions.map((q, i) => `${i + 1}. ${q.question}`).join('\n')}

R√àGLE ABSOLUE : 
- Quand le candidat r√©pond √† la question N, tu poses TOUJOURS la question N+1
- Ne JAMAIS demander "plus de d√©tails" ou "pouvez-vous pr√©ciser"
- Ne JAMAIS poser de questions suppl√©mentaires
- Apr√®s la question 10, tu conclus avec "Merci pour vos r√©ponses, l'entretien est termin√©."

Commence par dire bonjour et pose la premi√®re question.`;
}