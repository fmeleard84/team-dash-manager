-- ‚ö†Ô∏è IMPORTANT: Ex√©cutez ce script dans le dashboard Supabase SQL Editor
-- Go to: https://supabase.com/dashboard/project/egdelmcijszuapcpglsy/sql/new

-- ========================================
-- CR√âER DES R√âSULTATS DE TEST POUR V√âRIFIER
-- ========================================

DO $$
DECLARE
    v_candidate_id UUID;
    v_email TEXT;
    v_created_count INTEGER := 0;
BEGIN
    -- Pour chaque candidat r√©cent sans r√©sultat de test
    FOR v_candidate_id, v_email IN 
        SELECT cp.id, cp.email
        FROM candidate_profiles cp
        LEFT JOIN candidate_qualification_results cqr ON cp.id = cqr.candidate_id
        WHERE cqr.id IS NULL
        AND cp.email LIKE 'fmeleard+ressource_%'
        ORDER BY cp.created_at DESC
        LIMIT 3
    LOOP
        -- Cr√©er un r√©sultat de test
        INSERT INTO candidate_qualification_results (
            candidate_id,
            test_answers,
            score,
            qualification_status
        ) VALUES (
            v_candidate_id,
            jsonb_build_object(
                'q1', 'R√©ponse 1',
                'q2', 'R√©ponse 2', 
                'q3', 'R√©ponse 3',
                'q4', 'R√©ponse 4',
                'q5', 'R√©ponse 5'
            ),
            CASE 
                WHEN v_email LIKE '%_9@%' THEN 95
                WHEN v_email LIKE '%_7@%' THEN 85
                ELSE 75
            END,
            'qualified'
        );
        
        v_created_count := v_created_count + 1;
        RAISE NOTICE '‚úÖ R√©sultat cr√©√© pour: %', v_email;
    END LOOP;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üìä Total de r√©sultats cr√©√©s: %', v_created_count;
END $$;

-- ========================================
-- METTRE √Ä JOUR LE T√âL√âPHONE POUR LES TESTS
-- ========================================

-- Mettre √† jour le t√©l√©phone pour quelques candidats r√©cents
UPDATE candidate_profiles 
SET phone = '+33 6 12 34 56 78'
WHERE email = 'fmeleard+ressource_9@gmail.com';

UPDATE candidate_profiles 
SET phone = '+33 6 98 76 54 32'
WHERE email = 'fmeleard+ressource_7@gmail.com';

-- Aussi mettre √† jour dans la table profiles
UPDATE profiles
SET phone = '+33 6 12 34 56 78'
WHERE email = 'fmeleard+ressource_9@gmail.com';

UPDATE profiles
SET phone = '+33 6 98 76 54 32'
WHERE email = 'fmeleard+ressource_7@gmail.com';

-- ========================================
-- V√âRIFIER LES R√âSULTATS
-- ========================================

RAISE NOTICE '';
RAISE NOTICE '=== V√âRIFICATION APR√àS CR√âATION ===';

-- Afficher les candidats avec leurs r√©sultats
SELECT 
    cp.email,
    cp.phone,
    cp.qualification_status as "Statut profil",
    cqr.score as "Score test",
    cqr.qualification_status as "Statut test",
    CASE 
        WHEN cqr.id IS NOT NULL THEN '‚úÖ OUI'
        ELSE '‚ùå NON'
    END as "Test pass√©?",
    jsonb_array_length(COALESCE(cqr.test_answers::jsonb, '{}'::jsonb)) as "Nb r√©ponses",
    cp.created_at::date as "Date cr√©ation"
FROM candidate_profiles cp
LEFT JOIN candidate_qualification_results cqr ON cp.id = cqr.candidate_id
WHERE cp.email LIKE 'fmeleard+ressource_%'
ORDER BY cp.created_at DESC
LIMIT 10;

-- ========================================
-- DEBUG : POURQUOI LES SAUVEGARDES √âCHOUENT
-- ========================================

RAISE NOTICE '';
RAISE NOTICE '=== ANALYSE DES PROBL√àMES ===';

DO $$
DECLARE
    v_count INTEGER;
BEGIN
    -- V√©rifier les contraintes uniques
    SELECT COUNT(*) INTO v_count
    FROM information_schema.table_constraints 
    WHERE table_name = 'candidate_qualification_results' 
    AND constraint_type = 'UNIQUE';
    RAISE NOTICE 'üîç Contraintes UNIQUE sur candidate_qualification_results: %', v_count;
    
    -- V√©rifier s'il y a un index unique sur candidate_id
    SELECT COUNT(*) INTO v_count
    FROM pg_indexes 
    WHERE tablename = 'candidate_qualification_results' 
    AND indexdef LIKE '%UNIQUE%candidate_id%';
    RAISE NOTICE 'üîç Index UNIQUE sur candidate_id: %', v_count;
    
    -- Afficher les politiques RLS
    RAISE NOTICE '';
    RAISE NOTICE 'üîí Politiques RLS actuelles:';
    FOR v_count IN 
        SELECT policyname, cmd, qual 
        FROM pg_policies 
        WHERE tablename = 'candidate_qualification_results'
    LOOP
        -- Juste pour la structure
    END LOOP;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üí° CONSEIL: Si les r√©sultats ne se sauvegardent pas:';
    RAISE NOTICE '   1. V√©rifiez la console du navigateur pour les erreurs';
    RAISE NOTICE '   2. Le candidateId doit correspondre √† un ID valide dans candidate_profiles';
    RAISE NOTICE '   3. Les politiques RLS doivent permettre INSERT pour le candidat connect√©';
END $$;