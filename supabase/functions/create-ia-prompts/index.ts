import { serve } from 'https://deno.land/std@0.168.0/http/server.ts';
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.39.3';

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const supabaseUrl = Deno.env.get('SUPABASE_URL')!;
    const supabaseServiceKey = Deno.env.get('SUPABASE_SERVICE_ROLE_KEY')!;
    const supabase = createClient(supabaseUrl, supabaseServiceKey);

    console.log('üöÄ Cr√©ation des prompts IA avec contextes valides...');

    // Les contextes valides d'apr√®s la contrainte sont :
    // 'general', 'team-composition', 'project-management', 'technical', 'meeting', 'task-management'

    const iaPrompts = [
      {
        id: `ia_writer_${Date.now()}_1`,
        name: 'IA R√©dacteur',
        context: 'general', // Contexte valide
        prompt: 'Tu es un r√©dacteur IA sp√©cialis√© dans la cr√©ation de contenu professionnel. Tu produis des documents structur√©s, clairs et adapt√©s au contexte du projet. Tu utilises un ton professionnel et tu structures toujours tes livrables avec des titres, sous-titres et sections bien d√©finies.',
        active: true,
        priority: 100
      },
      {
        id: `ia_pm_${Date.now()}_2`,
        name: 'IA Chef de Projet',
        context: 'project-management', // Contexte valide
        prompt: 'Tu es un chef de projet IA qui aide √† organiser, planifier et suivre les projets. Tu cr√©es des plannings, des roadmaps, des rapports d\'avancement et tu aides √† coordonner les √©quipes. Tu es m√©thodique, structur√© et orient√© r√©sultats.',
        active: true,
        priority: 100
      },
      {
        id: `ia_dev_${Date.now()}_3`,
        name: 'IA D√©veloppeur',
        context: 'technical', // Contexte valide
        prompt: 'Tu es un d√©veloppeur IA qui aide √† concevoir des architectures techniques, √©crire de la documentation technique, proposer des solutions et r√©viser du code. Tu es pr√©cis, technique et tu fournis toujours des exemples concrets.',
        active: true,
        priority: 100
      },
      {
        id: `ia_designer_${Date.now()}_4`,
        name: 'IA Designer',
        context: 'general', // Contexte valide (pas de contexte sp√©cifique pour design)
        prompt: 'Tu es un designer IA qui aide √† cr√©er des concepts visuels, des maquettes, des chartes graphiques et des guidelines UX/UI. Tu es cr√©atif, orient√© utilisateur et tu fournis des descriptions d√©taill√©es de tes propositions visuelles.',
        active: true,
        priority: 100
      },
      {
        id: `ia_analyst_${Date.now()}_5`,
        name: 'IA Analyste',
        context: 'general', // Contexte valide (pas de contexte sp√©cifique pour analyse)
        prompt: 'Tu es un analyste IA qui aide √† analyser des donn√©es, cr√©er des rapports, identifier des tendances et proposer des recommandations strat√©giques. Tu es analytique, factuel et tu bases toujours tes conclusions sur des donn√©es concr√®tes.',
        active: true,
        priority: 100
      },
      {
        id: `ia_team_${Date.now()}_6`,
        name: 'IA Assistant √âquipe',
        context: 'team-composition', // Contexte valide
        prompt: 'Tu es un assistant IA qui aide √† composer et g√©rer les √©quipes. Tu analyses les comp√©tences n√©cessaires, sugg√®res les profils adapt√©s et facilites la collaboration entre les membres de l\'√©quipe.',
        active: true,
        priority: 100
      },
      {
        id: `ia_task_${Date.now()}_7`,
        name: 'IA Gestionnaire de T√¢ches',
        context: 'task-management', // Contexte valide
        prompt: 'Tu es un gestionnaire de t√¢ches IA qui aide √† organiser, prioriser et suivre les t√¢ches du projet. Tu cr√©es des listes de t√¢ches, d√©finis les priorit√©s et assures le suivi de l\'avancement.',
        active: true,
        priority: 100
      },
      {
        id: `ia_meeting_${Date.now()}_8`,
        name: 'IA Assistant R√©union',
        context: 'meeting', // Contexte valide
        prompt: 'Tu es un assistant de r√©union IA qui aide √† pr√©parer, animer et faire le suivi des r√©unions. Tu cr√©es des ordres du jour, prends des notes et g√©n√®res des comptes-rendus structur√©s.',
        active: true,
        priority: 100
      }
    ];

    const results = [];
    let successCount = 0;
    let errorCount = 0;

    for (const iaPrompt of iaPrompts) {
      // V√©rifier si le prompt existe d√©j√†
      const { data: existing } = await supabase
        .from('prompts_ia')
        .select('id')
        .eq('name', iaPrompt.name)
        .single();

      if (existing) {
        results.push({
          name: iaPrompt.name,
          status: 'exists',
          id: existing.id
        });
        console.log(`‚ÑπÔ∏è Prompt "${iaPrompt.name}" existe d√©j√†`);
      } else {
        const { data, error } = await supabase
          .from('prompts_ia')
          .insert(iaPrompt)
          .select()
          .single();

        if (error) {
          errorCount++;
          results.push({
            name: iaPrompt.name,
            status: 'error',
            error: error.message
          });
          console.error(`‚ùå Erreur pour "${iaPrompt.name}":`, error.message);
        } else {
          successCount++;
          results.push({
            name: iaPrompt.name,
            status: 'created',
            id: data.id,
            context: data.context
          });
          console.log(`‚úÖ Prompt cr√©√©: "${iaPrompt.name}" (context: ${data.context})`);
        }
      }
    }

    // R√©cup√©rer tous les prompts IA pour v√©rification
    const { data: allIAPrompts } = await supabase
      .from('prompts_ia')
      .select('id, name, context')
      .in('context', ['general', 'team-composition', 'project-management', 'technical', 'meeting', 'task-management'])
      .order('name');

    return new Response(
      JSON.stringify({
        success: true,
        message: `Migration termin√©e: ${successCount} prompts cr√©√©s, ${errorCount} erreurs`,
        details: {
          created: successCount,
          errors: errorCount,
          total: iaPrompts.length
        },
        results,
        allIAPrompts: allIAPrompts || []
      }),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 200
      }
    );
  } catch (error) {
    console.error('‚ùå Erreur globale:', error);
    return new Response(
      JSON.stringify({
        success: false,
        error: error.message
      }),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 500
      }
    );
  }
});