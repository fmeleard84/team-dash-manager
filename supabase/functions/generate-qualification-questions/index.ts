import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.38.4';

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

const OPENAI_API_KEY = Deno.env.get('OPENAI_API_KEY');

interface QuestionGenerationRequest {
  profile: string;
  seniority: string;
  languages: string[];
  expertises: string[];
  count?: number;
}

interface GeneratedQuestion {
  id: string;
  question: string;
  category: 'technical' | 'behavioral' | 'situational';
  difficulty: 'easy' | 'medium' | 'hard';
  expectedKeywords?: string[];
}

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders });
  }

  try {
    const { profile, seniority, languages, expertises, count = 10 }: QuestionGenerationRequest = await req.json();

    console.log('üéØ G√©n√©ration de questions pour:', { profile, seniority, languages, expertises });

    // Cr√©er le prompt pour OpenAI
    const systemPrompt = `Tu es un expert en recrutement IT et √©valuation de comp√©tences.
    Tu dois g√©n√©rer ${count} questions de qualification professionnelle pour √©valuer un candidat.

    Les questions doivent √™tre:
    - Pertinentes par rapport au profil et au niveau
    - Vari√©es (techniques, comportementales, situationnelles)
    - Progressives en difficult√©
    - En fran√ßais
    - √âvaluables objectivement

    Format de r√©ponse JSON attendu:
    {
      "questions": [
        {
          "id": "q1",
          "question": "La question ici",
          "category": "technical|behavioral|situational",
          "difficulty": "easy|medium|hard",
          "expectedKeywords": ["mot-cl√©1", "mot-cl√©2"]
        }
      ]
    }`;

    const userPrompt = `G√©n√®re ${count} questions pour √©valuer un ${profile} ${seniority}.

    Langues requises: ${languages.join(', ')}
    Expertises √† valider: ${expertises.join(', ')}

    R√©partition souhait√©e:
    - 4 questions techniques (sur les expertises mentionn√©es)
    - 3 questions comportementales (gestion de projet, travail en √©quipe)
    - 3 questions situationnelles (r√©solution de probl√®mes, cas pratiques)

    Pour un ${seniority}, adapte la complexit√© des questions.`;

    // Appel √† OpenAI
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${OPENAI_API_KEY}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4-turbo-preview',
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: userPrompt }
        ],
        temperature: 0.7,
        max_tokens: 2000,
        response_format: { type: "json_object" }
      }),
    });

    if (!response.ok) {
      const error = await response.text();
      console.error('‚ùå Erreur OpenAI:', error);
      throw new Error('Erreur lors de la g√©n√©ration des questions');
    }

    const data = await response.json();
    const generatedContent = JSON.parse(data.choices[0].message.content);

    console.log('‚úÖ Questions g√©n√©r√©es:', generatedContent.questions.length);

    return new Response(
      JSON.stringify({
        success: true,
        questions: generatedContent.questions,
        metadata: {
          profile,
          seniority,
          languages,
          expertises,
          generatedAt: new Date().toISOString()
        }
      }),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 200
      }
    );
  } catch (error) {
    console.error('Error in generate-qualification-questions:', error);

    // Retourner des questions par d√©faut en cas d'erreur
    const defaultQuestions = generateDefaultQuestions();

    return new Response(
      JSON.stringify({
        success: false,
        error: error.message,
        questions: defaultQuestions,
        isDefault: true
      }),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 200 // On retourne 200 m√™me en cas d'erreur pour que le front puisse g√©rer
      }
    );
  }
});

// Questions par d√©faut en cas d'erreur
function generateDefaultQuestions(): GeneratedQuestion[] {
  return [
    {
      id: 'q1',
      question: 'D√©crivez votre exp√©rience professionnelle la plus significative dans votre domaine.',
      category: 'behavioral',
      difficulty: 'easy',
      expectedKeywords: ['exp√©rience', 'projet', 'r√©sultat']
    },
    {
      id: 'q2',
      question: 'Quelles sont vos principales comp√©tences techniques et comment les avez-vous acquises ?',
      category: 'technical',
      difficulty: 'easy',
      expectedKeywords: ['comp√©tences', 'formation', 'pratique']
    },
    {
      id: 'q3',
      question: 'Comment g√©rez-vous les priorit√©s lorsque vous avez plusieurs projets en parall√®le ?',
      category: 'behavioral',
      difficulty: 'medium',
      expectedKeywords: ['priorit√©s', 'organisation', 'planification']
    },
    {
      id: 'q4',
      question: 'D√©crivez une situation o√π vous avez d√ª r√©soudre un probl√®me technique complexe.',
      category: 'situational',
      difficulty: 'medium',
      expectedKeywords: ['probl√®me', 'solution', 'm√©thodologie']
    },
    {
      id: 'q5',
      question: 'Quelle est votre approche pour rester √† jour avec les nouvelles technologies ?',
      category: 'behavioral',
      difficulty: 'easy',
      expectedKeywords: ['veille', 'formation', 'apprentissage']
    },
    {
      id: 'q6',
      question: 'Comment collaborez-vous avec une √©quipe distribu√©e ou en remote ?',
      category: 'behavioral',
      difficulty: 'medium',
      expectedKeywords: ['communication', 'collaboration', 'outils']
    },
    {
      id: 'q7',
      question: 'Expliquez un concept technique complexe de votre domaine de mani√®re simple.',
      category: 'technical',
      difficulty: 'hard',
      expectedKeywords: ['vulgarisation', 'p√©dagogie', 'clart√©']
    },
    {
      id: 'q8',
      question: 'D√©crivez une situation o√π vous avez d√ª g√©rer un conflit dans une √©quipe.',
      category: 'situational',
      difficulty: 'hard',
      expectedKeywords: ['conflit', 'r√©solution', 'communication']
    },
    {
      id: 'q9',
      question: 'Quels sont vos objectifs de carri√®re √† moyen terme ?',
      category: 'behavioral',
      difficulty: 'medium',
      expectedKeywords: ['objectifs', '√©volution', 'ambitions']
    },
    {
      id: 'q10',
      question: 'Comment √©valuez-vous la qualit√© de votre travail ?',
      category: 'technical',
      difficulty: 'medium',
      expectedKeywords: ['qualit√©', 'crit√®res', 'am√©lioration']
    }
  ];
}