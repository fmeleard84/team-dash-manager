#!/bin/bash

# =========================================
# SCRIPT DE D√âPLOIEMENT COMPLET DU SYST√àME
# PGVECTOR POUR CONTEXTE PROJET IA
# =========================================

echo "üöÄ D√©marrage du d√©ploiement du syst√®me PGVector pour contexte projet IA..."
echo "=================================================="

# Configuration
SUPABASE_PROJECT_REF="egdelmcijszuapcpglsy"
SUPABASE_ACCESS_TOKEN="sbp_b8ec67e2a4f3a7922f6cfea023b2cf81a00a7d9e"
SUPABASE_DB_PASSWORD="Raymonde7510_2a"

# Export des variables pour Supabase CLI
export SUPABASE_ACCESS_TOKEN=$SUPABASE_ACCESS_TOKEN
export SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD

# 1. Application de la migration SQL
echo ""
echo "üìä √âtape 1: Application de la migration SQL..."
echo "----------------------------------------------"
npx supabase db push --project-ref $SUPABASE_PROJECT_REF

if [ $? -eq 0 ]; then
    echo "‚úÖ Migration SQL appliqu√©e avec succ√®s"
else
    echo "‚ùå Erreur lors de l'application de la migration SQL"
    exit 1
fi

# 2. D√©ploiement de l'Edge Function process-project-embeddings
echo ""
echo "‚ö° √âtape 2: D√©ploiement de l'Edge Function process-project-embeddings..."
echo "------------------------------------------------------------------------"
npx supabase functions deploy process-project-embeddings --project-ref $SUPABASE_PROJECT_REF

if [ $? -eq 0 ]; then
    echo "‚úÖ Edge Function process-project-embeddings d√©ploy√©e"
else
    echo "‚ùå Erreur lors du d√©ploiement de l'Edge Function process-project-embeddings"
    exit 1
fi

# 3. Mise √† jour de l'Edge Function ai-conversation-handler
echo ""
echo "ü§ñ √âtape 3: Mise √† jour de l'Edge Function ai-conversation-handler..."
echo "---------------------------------------------------------------------"
npx supabase functions deploy ai-conversation-handler --project-ref $SUPABASE_PROJECT_REF

if [ $? -eq 0 ]; then
    echo "‚úÖ Edge Function ai-conversation-handler mise √† jour"
else
    echo "‚ùå Erreur lors de la mise √† jour de l'Edge Function ai-conversation-handler"
    exit 1
fi

# 4. Test de l'Edge Function process-project-embeddings
echo ""
echo "üß™ √âtape 4: Test de l'Edge Function process-project-embeddings..."
echo "-----------------------------------------------------------------"
curl -X POST \
  "https://$SUPABASE_PROJECT_REF.supabase.co/functions/v1/process-project-embeddings" \
  -H "Authorization: Bearer $SUPABASE_ANON_KEY" \
  -H "Content-Type: application/json" \
  -d '{"action": "process", "batchSize": 1}' \
  --silent --show-error

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ Test de l'Edge Function r√©ussi"
else
    echo ""
    echo "‚ö†Ô∏è Le test a √©chou√©, mais ce n'est pas critique si la queue est vide"
fi

# 5. Instructions pour configurer le CRON
echo ""
echo "üìÖ √âtape 5: Configuration du CRON (manuelle)"
echo "-------------------------------------------"
echo ""
echo "‚ö†Ô∏è IMPORTANT: Pour activer le traitement automatique, vous devez:"
echo ""
echo "1. Aller dans le Dashboard Supabase:"
echo "   https://supabase.com/dashboard/project/$SUPABASE_PROJECT_REF"
echo ""
echo "2. Activer les extensions n√©cessaires:"
echo "   - Database > Extensions > Rechercher 'pg_cron' > Enable"
echo "   - Database > Extensions > Rechercher 'pg_net' > Enable"
echo ""
echo "3. Configurer la cl√© OpenAI (si pas d√©j√† fait):"
echo "   - Settings > Edge Functions > Secrets"
echo "   - Ajouter: OPENAI_API_KEY = votre-cl√©-api"
echo ""
echo "4. Ex√©cuter le script CRON dans SQL Editor:"
echo "   - Copier le contenu de: setup-project-embeddings-cron.sql"
echo "   - Coller et ex√©cuter dans SQL Editor"
echo ""

# 6. R√©sum√© du d√©ploiement
echo "=================================================="
echo "üìä R√âSUM√â DU D√âPLOIEMENT"
echo "=================================================="
echo ""
echo "‚úÖ Tables cr√©√©es:"
echo "   - project_embeddings (stockage des vecteurs)"
echo "   - project_embedding_queue (queue de traitement)"
echo ""
echo "‚úÖ Fonctions RPC cr√©√©es:"
echo "   - search_project_embeddings (recherche vectorielle)"
echo "   - get_project_context_for_ai (contexte enrichi)"
echo "   - queue_project_content_for_embedding (ajout √† la queue)"
echo ""
echo "‚úÖ Triggers cr√©√©s:"
echo "   - Messages ‚Üí Queue automatique"
echo "   - Fichiers Drive ‚Üí Queue automatique"
echo "   - Cartes Kanban ‚Üí Queue automatique"
echo ""
echo "‚úÖ Edge Functions d√©ploy√©es:"
echo "   - process-project-embeddings (traitement des embeddings)"
echo "   - ai-conversation-handler (mis √† jour avec contexte projet)"
echo ""
echo "‚è≥ √Ä faire manuellement:"
echo "   - Activer pg_cron et pg_net dans Supabase Dashboard"
echo "   - Configurer OPENAI_API_KEY dans les secrets"
echo "   - Ex√©cuter setup-project-embeddings-cron.sql"
echo ""
echo "=================================================="
echo "üéâ D√©ploiement termin√© avec succ√®s!"
echo "=================================================="
echo ""
echo "üìù Pour v√©rifier le statut:"
echo "   - Queue: SELECT status, COUNT(*) FROM project_embedding_queue GROUP BY status;"
echo "   - Embeddings: SELECT COUNT(*) FROM project_embeddings;"
echo "   - Logs: npx supabase functions logs process-project-embeddings --project-ref $SUPABASE_PROJECT_REF"