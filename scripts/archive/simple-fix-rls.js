import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://egdelmcijszuapcpglsy.supabase.co';
// Utiliser la cl√© anon normale pour les tests
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVnZGVsbWNpanN6dWFwY3BnbHN5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQxNjIyMDAsImV4cCI6MjA2OTczODIwMH0.JYV-JxosrfE7kMtFw3XLs27PGf3Fn-rDyJLDWeYXF_U';

const supabase = createClient(supabaseUrl, supabaseKey);

async function directRLSFix() {
  console.log('üîß Application directe de la correction RLS...');
  
  try {
    // 1. Essayer de cr√©er directement un profil candidat avec les privil√®ges service
    console.log('\n1Ô∏è‚É£ Test de cr√©ation directe avec service role...');
    
    const { data: directTest, error: directError } = await supabase
      .from('candidate_profiles')
      .insert({
        email: 'fmeleard+ressource_5@gmail.com',
        first_name: 'Meleard R',
        last_name: 'Francis R',
        qualification_status: 'pending',
        password_hash: '' // Ajouter un password_hash vide
      })
      .select()
      .single();
    
    if (directError) {
      console.error('‚ùå Cr√©ation directe √©chou√©e:', directError);
      
      // 2. Essayer une approche alternative - cr√©er via un upsert
      console.log('\n2Ô∏è‚É£ Test avec upsert...');
      const { data: upsertTest, error: upsertError } = await supabase
        .from('candidate_profiles')
        .upsert({
          email: 'fmeleard+ressource_5@gmail.com',
          first_name: 'Meleard R',
          last_name: 'Francis R',
          qualification_status: 'pending',
          password_hash: '' // Ajouter un password_hash vide
        }, {
          onConflict: 'email'
        })
        .select()
        .single();
      
      if (upsertError) {
        console.error('‚ùå Upsert √©chou√©:', upsertError);
      } else {
        console.log('‚úÖ Profil cr√©√© via upsert:', upsertTest);
      }
      
    } else {
      console.log('‚úÖ Profil cr√©√© directement:', directTest);
    }
    
    // 3. V√©rifier le profil maintenant
    console.log('\n3Ô∏è‚É£ V√©rification du profil...');
    const { data: checkProfile, error: checkError } = await supabase
      .from('candidate_profiles')
      .select('*')
      .eq('email', 'fmeleard+ressource_5@gmail.com')
      .single();
    
    if (checkError) {
      console.error('‚ùå Profil non trouv√©:', checkError);
    } else {
      console.log('‚úÖ Profil confirm√©:', checkProfile);
    }
    
  } catch (error) {
    console.error('üí• Erreur lors de la cr√©ation:', error);
  }
}

directRLSFix();